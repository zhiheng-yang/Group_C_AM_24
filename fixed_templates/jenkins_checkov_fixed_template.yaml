apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-jenkins
  namespace: jenkins
  labels:
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-4.3.24
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jenkins-controller
---
apiVersion: v1
kind: Secret
metadata:
  name: release-name-jenkins
  namespace: jenkins
  labels:
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-4.3.24
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jenkins-controller
type: Opaque
data:
  jenkins-admin-password: TTVvRm1JR1gzME1oVjBIbFlPQzdXMQ==
  jenkins-admin-user: YWRtaW4=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-jenkins
  namespace: jenkins
  labels:
    app.kubernetes.io/name: jenkins
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jenkins-controller
data:
  apply_config.sh: "set -e\necho \"disable Setup Wizard\"\n# Prevent Setup Wizard\
    \ when JCasC is enabled\necho $JENKINS_VERSION > /var/jenkins_home/jenkins.install.UpgradeWizard.state\n\
    echo $JENKINS_VERSION > /var/jenkins_home/jenkins.install.InstallUtil.lastExecVersion\n\
    echo \"download plugins\"\n# Install missing plugins\ncp /var/jenkins_config/plugins.txt\
    \ /var/jenkins_home;\nrm -rf /usr/share/jenkins/ref/plugins/*.lock\nversion ()\
    \ { echo \"$@\" | awk -F. '{ printf(\"%d%03d%03d%03d\\n\", $1,$2,$3,$4); }'; }\n\
    if [ -f \"/usr/share/jenkins/jenkins.war\" ] && [ -n \"$(command -v jenkins-plugin-cli)\"\
    \ 2>/dev/null ] && [ $(version $(jenkins-plugin-cli --version)) -ge $(version\
    \ \"2.1.1\") ]; then\n  jenkins-plugin-cli --verbose --war \"/usr/share/jenkins/jenkins.war\"\
    \ --plugin-file \"/var/jenkins_home/plugins.txt\" --latest true;\nelse\n  /usr/local/bin/install-plugins.sh\
    \ `echo $(cat /var/jenkins_home/plugins.txt)`;\nfi\necho \"copy plugins to shared\
    \ volume\"\n# Copy plugins to shared volume\nyes n | cp -i /usr/share/jenkins/ref/plugins/*\
    \ /var/jenkins_plugins/;\necho \"finished initialization\""
  plugins.txt: 'kubernetes:3900.va_dce992317b_4

    workflow-aggregator:596.v8c21c963d92d

    git:5.0.0

    configuration-as-code:1625.v27444588cc3d'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-jenkins-jenkins-jcasc-config
  namespace: jenkins
  labels:
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-4.3.24
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jenkins-controller
    release-name-jenkins-jenkins-config: 'true'
data:
  jcasc-default-config.yaml: "jenkins:\n  authorizationStrategy:\n    loggedInUsersCanDoAnything:\n\
    \      allowAnonymousRead: false\n  securityRealm:\n    local:\n      allowsSignup:\
    \ false\n      enableCaptcha: false\n      users:\n      - id: \"${chart-admin-username}\"\
    \n        name: \"Jenkins Admin\"\n        password: \"${chart-admin-password}\"\
    \n  disableRememberMe: false\n  mode: NORMAL\n  numExecutors: 0\n  labelString:\
    \ \"\"\n  projectNamingStrategy: \"standard\"\n  markupFormatter:\n    plainText\n\
    \  clouds:\n  - kubernetes:\n      containerCapStr: \"10\"\n      defaultsProviderTemplate:\
    \ \"\"\n      connectTimeout: \"5\"\n      readTimeout: \"15\"\n      jenkinsUrl:\
    \ \"http://release-name-jenkins.default.svc.cluster.local:8080\"\n      jenkinsTunnel:\
    \ \"release-name-jenkins-agent.default.svc.cluster.local:50000\"\n      maxRequestsPerHostStr:\
    \ \"32\"\n      name: \"kubernetes\"\n      namespace: \"default\"\n      serverUrl:\
    \ \"https://kubernetes.default\"\n      podLabels:\n      - key: \"jenkins/release-name-jenkins-agent\"\
    \n        value: \"true\"\n      templates:\n        - name: \"default\"\n   \
    \       namespace: \"default\"\n          id: e0cd10fbcdae0f46f80cd106dcebfbc8d442809678e09bccf7e773fe9accbf8f\n\
    \          containers:\n          - name: \"jnlp\"\n            alwaysPullImage:\
    \ false\n            args: \"^${computer.jnlpmac} ^${computer.name}\"\n      \
    \      command: \n            envVars:\n              - envVar:\n            \
    \      key: \"JENKINS_URL\"\n                  value: \"http://release-name-jenkins.default.svc.cluster.local:8080/\"\
    \n            image: \"jenkins/inbound-agent:3107.v665000b_51092-5\"\n       \
    \     privileged: \"false\"\n            resourceLimitCpu: 512m\n            resourceLimitMemory:\
    \ 512Mi\n            resourceRequestCpu: 512m\n            resourceRequestMemory:\
    \ 512Mi\n            runAsUser: \n            runAsGroup: \n            ttyEnabled:\
    \ false\n            workingDir: /home/jenkins/agent\n          idleMinutes: 0\n\
    \          instanceCap: 2147483647\n          label: \"release-name-jenkins-agent\
    \ \"\n          nodeUsageMode: \"NORMAL\"\n          podRetention: Never\n   \
    \       showRawYaml: true\n          serviceAccount: \"default\"\n          slaveConnectTimeoutStr:\
    \ \"100\"\n          yamlMergeStrategy: override\n  crumbIssuer:\n    standard:\n\
    \      excludeClientIPFromCrumb: true\nsecurity:\n  apiToken:\n    creationOfLegacyTokenEnabled:\
    \ false\n    tokenGenerationOnCreationEnabled: false\n    usageStatisticsEnabled:\
    \ true\nunclassified:\n  location:\n    adminAddress: \n    url: http://release-name-jenkins:8080"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-jenkins
  namespace: jenkins
  labels:
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-4.3.24
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jenkins-controller
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-jenkins-schedule-agents
  namespace: jenkins
  labels:
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-4.3.24
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jenkins-controller
rules:
- apiGroups:
  - ''
  resources:
  - pods
  - pods/exec
  - pods/log
  - persistentvolumeclaims
  - events
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - pods
  - pods/exec
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-jenkins-casc-reload
  namespace: jenkins
  labels:
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-4.3.24
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jenkins-controller
rules:
- apiGroups:
  - ''
  resources:
  - configmaps
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-jenkins-schedule-agents
  namespace: jenkins
  labels:
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-4.3.24
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jenkins-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-jenkins-schedule-agents
subjects:
- kind: ServiceAccount
  name: release-name-jenkins
  namespace: jenkins
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-jenkins-watch-configmaps
  namespace: jenkins
  labels:
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-4.3.24
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jenkins-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-jenkins-casc-reload
subjects:
- kind: ServiceAccount
  name: release-name-jenkins
  namespace: jenkins
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-jenkins-agent
  namespace: jenkins
  labels:
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-4.3.24
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jenkins-controller
spec:
  ports:
  - port: 50000
    targetPort: 50000
    name: agent-listener
  selector:
    app.kubernetes.io/component: jenkins-controller
    app.kubernetes.io/instance: release-name
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-jenkins
  namespace: jenkins
  labels:
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-4.3.24
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jenkins-controller
spec:
  ports:
  - port: 8080
    name: http
    targetPort: 8080
  selector:
    app.kubernetes.io/component: jenkins-controller
    app.kubernetes.io/instance: release-name
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-jenkins
  namespace: jenkins
  labels:
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-4.3.24
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jenkins-controller
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  serviceName: release-name-jenkins
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: jenkins-controller
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jenkins
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: jenkins-controller
      annotations:
        checksum/config: edc91584ea04fea3e2e64540e13d3a93bb2c91eb6617e221991081a7bbf62a05
    spec:
      securityContext:
        runAsUser: 25000
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: release-name-jenkins
      initContainers:
      - name: init
        image: jenkins/jenkins:2.46.2@sha256:681ef98a247f19c89a432aa6197950037a8f2cc5e51aedb0e4926130b4852402
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsUser: 25000
          capabilities:
            drop:
            - ALL
        command:
        - sh
        - /var/jenkins_config/apply_config.sh
        resources:
          limits:
            cpu: 2000m
            memory: 4096Mi
          requests:
            cpu: 50m
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
        - mountPath: /var/jenkins_config
          name: jenkins-config
        - mountPath: /usr/share/jenkins/ref/plugins
          name: plugins
        - mountPath: /var/jenkins_plugins
          name: plugin-dir
        - mountPath: /tmp
          name: tmp-volume
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      containers:
      - name: jenkins
        image: jenkins/jenkins:2.46.2@sha256:681ef98a247f19c89a432aa6197950037a8f2cc5e51aedb0e4926130b4852402
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsUser: 25000
          capabilities:
            drop:
            - ALL
        args:
        - --httpPort=8080
        env:
        - name: SECRETS
          value: /run/secrets/additional
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: JAVA_OPTS
          value: '-Dcasc.reload.token=$(POD_NAME) '
        - name: JENKINS_OPTS
          value: '--webroot=/var/jenkins_cache/war '
        - name: JENKINS_SLAVE_AGENT_PORT
          value: '50000'
        - name: CASC_JENKINS_CONFIG
          value: /var/jenkins_home/casc_configs
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 50000
          name: agent-listener
        startupProbe:
          failureThreshold: 12
          httpGet:
            path: /login
            port: http
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          limits:
            cpu: 2000m
            memory: <memory_placeholder>
          requests:
            cpu: 50m
            memory: <memory_placeholder>
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
          readOnly: false
        - mountPath: /var/jenkins_config
          name: jenkins-config
          readOnly: true
        - mountPath: /usr/share/jenkins/ref/plugins/
          name: plugin-dir
          readOnly: false
        - name: sc-config-volume
          mountPath: /var/jenkins_home/casc_configs
        - name: jenkins-secrets
          mountPath: /run/secrets/additional
          readOnly: true
        - name: jenkins-cache
          mountPath: /var/jenkins_cache
        - mountPath: /tmp
          name: tmp-volume
      - name: config-reload
        image: kiwigrid/k8s-sidecar:1.23.1
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 25000
          capabilities:
            drop:
            - ALL
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LABEL
          value: release-name-jenkins-jenkins-config
        - name: FOLDER
          value: /var/jenkins_home/casc_configs
        - name: NAMESPACE
          value: default
        - name: REQ_URL
          value: http://localhost:8080/reload-configuration-as-code/?casc-reload-token=$(POD_NAME)
        - name: REQ_METHOD
          value: POST
        - name: REQ_RETRY_CONNECT
          value: '10'
        resources:
          limits:
            cpu: 2000m
            memory: 4096Mi
          requests:
            cpu: 2000m
            memory: 256Mi
        volumeMounts:
        - name: sc-config-volume
          mountPath: /var/jenkins_home/casc_configs
        - name: jenkins-home
          mountPath: /var/jenkins_home
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: plugins
        emptyDir: {}
      - name: jenkins-config
        configMap:
          name: release-name-jenkins
      - name: plugin-dir
        emptyDir: {}
      - name: jenkins-secrets
        projected:
          sources:
          - secret:
              name: release-name-jenkins
              items:
              - key: jenkins-admin-user
                path: chart-admin-username
              - key: jenkins-admin-password
                path: chart-admin-password
      - name: jenkins-cache
        emptyDir: {}
      - name: jenkins-home
        persistentVolumeClaim:
          claimName: release-name-jenkins
      - name: sc-config-volume
        emptyDir: {}
      - name: tmp-volume
        emptyDir: {}
      automountServiceAccountToken: false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-jenkins-tests
  namespace: jenkins
  annotations:
    helm.sh/hook: test
data:
  run.sh: "@test \"Testing Jenkins UI is accessible\" {\n  curl --retry 48 --retry-delay\
    \ 10 release-name-jenkins:8080/login\n}"
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: jenkins-net-policy
  namespace: jenkins
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: jenkins
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - ipBlock:
        cidr: 10.0.1.0/24
  egress:
  - to:
    - ipBlock:
        cidr: 10.0.1.0/24
    ports:
    - protocol: TCP
      port: 5978
---
apiVersion: v1
kind: Pod
metadata:
  name: release-name-ui-test-i3e79
  namespace: jenkins
  annotations:
    helm.sh/hook: test-success
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
  labels:
    app.kubernetes.io/name: jenkins
spec:
  initContainers:
  - name: test-framework
    image: bats/bats:1.9.0
    command:
    - bash
    - -c
    args:
    - '# copy bats to tools dir

      set -ex

      cp -R /opt/bats /tools/bats/

      '
    resources:
      requests:
        memory: 128Mi
        cpu: 250m
      limits:
        memory: 128Mi
        cpu: 250m
    volumeMounts:
    - mountPath: /tools
      name: tools
    securityContext:
      runAsUser: 25000
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsGroup: 25000
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
    readinessProbe:
      exec:
        command:
        - ls
        - /
      initialDelaySeconds: 30
      periodSeconds: 10
    livenessProbe:
      exec:
        command:
        - ls
        - /
      initialDelaySeconds: 30
      periodSeconds: 10
    imagePullPolicy: Always
  containers:
  - name: release-name-ui-test
    image: jenkins/jenkins:2.46.2@sha256:681ef98a247f19c89a432aa6197950037a8f2cc5e51aedb0e4926130b4852402
    command:
    - /tools/bats/bin/bats
    - -t
    - /tests/run.sh
    volumeMounts:
    - mountPath: /tests
      name: tests
      readOnly: true
    - mountPath: /tools
      name: tools
    resources:
      requests:
        memory: 128Mi
        cpu: 250m
      limits:
        memory: 128Mi
        cpu: 250m
    securityContext:
      runAsUser: 25000
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsGroup: 25000
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
    readinessProbe:
      exec:
        command:
        - ls
        - /
      initialDelaySeconds: 30
      periodSeconds: 10
    livenessProbe:
      exec:
        command:
        - ls
        - /
      initialDelaySeconds: 30
      periodSeconds: 10
    imagePullPolicy: Always
  volumes:
  - name: tests
    configMap:
      name: release-name-jenkins-tests
  - name: tools
    emptyDir: {}
  restartPolicy: Never
  securityContext:
    runAsUser: 25000
    seccompProfile:
      type: RuntimeDefault
    runAsNonRoot: true
    runAsGroup: 25000
  automountServiceAccountToken: false
