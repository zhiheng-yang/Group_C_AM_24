apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: false
metadata:
  name: release-name-cert-manager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cainjector
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
  namespace: busybox-namespace
---
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: false
metadata:
  name: release-name-cert-manager
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
  namespace: busybox-namespace
---
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: false
metadata:
  name: release-name-cert-manager-webhook
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
  namespace: busybox-namespace
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-cert-manager-webhook
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
  namespace: busybox-namespace
data: null
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cainjector
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  verbs:
  - get
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  - mutatingwebhookconfigurations
  verbs:
  - get
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs:
  - get
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-controller-issuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - issuers
  - issuers/status
  verbs:
  - get
- apiGroups:
  - cert-manager.io
  resources:
  - issuers
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-controller-clusterissuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - clusterissuers
  - clusterissuers/status
  verbs:
  - get
- apiGroups:
  - cert-manager.io
  resources:
  - clusterissuers
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-controller-certificates
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - certificates/status
  - certificaterequests
  - certificaterequests/status
  verbs:
  - get
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - certificaterequests
  - clusterissuers
  - issuers
  verbs:
  - get
- apiGroups:
  - cert-manager.io
  resources:
  - certificates/finalizers
  - certificaterequests/finalizers
  verbs:
  - get
- apiGroups:
  - acme.cert-manager.io
  resources:
  - orders
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-controller-orders
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
rules:
- apiGroups:
  - acme.cert-manager.io
  resources:
  - orders
  - orders/status
  verbs:
  - get
- apiGroups:
  - acme.cert-manager.io
  resources:
  - orders
  - challenges
  verbs:
  - get
- apiGroups:
  - cert-manager.io
  resources:
  - clusterissuers
  - issuers
  verbs:
  - get
- apiGroups:
  - acme.cert-manager.io
  resources:
  - challenges
  verbs:
  - get
- apiGroups:
  - acme.cert-manager.io
  resources:
  - orders/finalizers
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-controller-challenges
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
rules:
- apiGroups:
  - acme.cert-manager.io
  resources:
  - challenges
  - challenges/status
  verbs:
  - get
- apiGroups:
  - acme.cert-manager.io
  resources:
  - challenges
  verbs:
  - get
- apiGroups:
  - cert-manager.io
  resources:
  - issuers
  - clusterissuers
  verbs:
  - get
- apiGroups:
  - v1
  resources:
  - pods
  - services
  verbs:
  - get
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes
  verbs:
  - get
- apiGroups:
  - route.openshift.io
  resources:
  - routes/custom-host
  verbs:
  - get
- apiGroups:
  - acme.cert-manager.io
  resources:
  - challenges/finalizers
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-controller-ingress-shim
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - certificaterequests
  verbs:
  - create
  - update
  - delete
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - certificaterequests
  - issuers
  - clusterissuers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/finalizers
  verbs:
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways
  - httproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways/finalizers
  - httproutes/finalizers
  verbs:
  - update
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-view
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
    rbac.authorization.k8s.io/aggregate-to-view: 'true'
    rbac.authorization.k8s.io/aggregate-to-edit: 'true'
    rbac.authorization.k8s.io/aggregate-to-admin: 'true'
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - certificaterequests
  - issuers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - acme.cert-manager.io
  resources:
  - challenges
  - orders
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-edit
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
    rbac.authorization.k8s.io/aggregate-to-edit: 'true'
    rbac.authorization.k8s.io/aggregate-to-admin: 'true'
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - certificaterequests
  - issuers
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - cert-manager.io
  resources:
  - certificates/status
  verbs:
  - update
- apiGroups:
  - acme.cert-manager.io
  resources:
  - challenges
  - orders
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-controller-approve:cert-manager-io
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cert-manager
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - signers
  verbs:
  - approve
  resourceNames:
  - issuers.cert-manager.io/*
  - clusterissuers.cert-manager.io/*
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-controller-certificatesigningrequests
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cert-manager
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/status
  verbs:
  - update
  - patch
- apiGroups:
  - certificates.k8s.io
  resources:
  - signers
  resourceNames:
  - issuers.cert-manager.io/*
  - clusterissuers.cert-manager.io/*
  verbs:
  - sign
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cert-manager-webhook:subjectaccessreviews
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
rules:
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cert-manager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cainjector
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cert-manager-cainjector
subjects:
- name: release-name-cert-manager-cainjector
  namespace: cert-manager
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cert-manager-controller-issuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cert-manager-controller-issuers
subjects:
- name: release-name-cert-manager
  namespace: cert-manager
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cert-manager-controller-clusterissuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cert-manager-controller-clusterissuers
subjects:
- name: release-name-cert-manager
  namespace: cert-manager
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cert-manager-controller-certificates
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cert-manager-controller-certificates
subjects:
- name: release-name-cert-manager
  namespace: cert-manager
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cert-manager-controller-orders
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cert-manager-controller-orders
subjects:
- name: release-name-cert-manager
  namespace: cert-manager
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cert-manager-controller-challenges
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cert-manager-controller-challenges
subjects:
- name: release-name-cert-manager
  namespace: cert-manager
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cert-manager-controller-ingress-shim
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cert-manager-controller-ingress-shim
subjects:
- name: release-name-cert-manager
  namespace: cert-manager
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cert-manager-controller-approve:cert-manager-io
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cert-manager
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cert-manager-controller-approve:cert-manager-io
subjects:
- name: release-name-cert-manager
  namespace: cert-manager
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cert-manager-controller-certificatesigningrequests
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cert-manager
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cert-manager-controller-certificatesigningrequests
subjects:
- name: release-name-cert-manager
  namespace: cert-manager
  kind: ServiceAccount
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cert-manager-webhook:subjectaccessreviews
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cert-manager-webhook:subjectaccessreviews
subjects:
- apiGroup: ''
  kind: ServiceAccount
  name: release-name-cert-manager-webhook
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-cert-manager-cainjector:leaderelection
  namespace: busybox-namespace
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cainjector
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  resourceNames:
  - cert-manager-cainjector-leader-election
  - cert-manager-cainjector-leader-election-core
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-cert-manager:leaderelection
  namespace: busybox-namespace
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  resourceNames:
  - cert-manager-controller
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-cert-manager-webhook:dynamic-serving
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
  namespace: busybox-namespace
rules:
- apiGroups:
  - v1
  resources:
  - pods
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-cert-manager-cainjector:leaderelection
  namespace: busybox-namespace
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cainjector
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-cert-manager-cainjector:leaderelection
subjects:
- kind: ServiceAccount
  name: release-name-cert-manager-cainjector
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-cert-manager:leaderelection
  namespace: busybox-namespace
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-cert-manager:leaderelection
subjects:
- apiGroup: ''
  kind: ServiceAccount
  name: release-name-cert-manager
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-cert-manager-webhook:dynamic-serving
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
  namespace: busybox-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-cert-manager-webhook:dynamic-serving
subjects:
- apiGroup: ''
  kind: ServiceAccount
  name: release-name-cert-manager-webhook
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-cert-manager
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
  namespace: busybox-namespace
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 9402
    name: tcp-prometheus-servicemonitor
    targetPort: 9402
  selector:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
---
apiVersion: v1
kind: Service
metadata:
  name: release-name-cert-manager-webhook
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
  namespace: busybox-namespace
spec:
  type: ClusterIP
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: custom-policy
spec:
  podSelector:
    matchLabels:
      app: cainjector
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - ipBlock:
        cidr: 10.0.1.0/24
  egress:
  - to:
    - ipBlock:
        cidr: 10.0.1.0/24
    ports:
    - protocol: TCP
      port: 5978
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-cert-manager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: cainjector
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
  namespace: busybox-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: cainjector
  template:
    metadata:
      labels:
        app: cainjector
        app.kubernetes.io/name: cainjector
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: cainjector
        app.kubernetes.io/version: v1.12.1
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.12.1
      annotations:
        container.apparmor.security.beta.kubernetes.io/cert-manager-cainjector: runtime/default
    spec:
      serviceAccountName: release-name-cert-manager-cainjector
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        runAsUser: 25000
      containers:
      - name: cert-manager-cainjector
        image: quay.io/jetstack/cert-manager-cainjector:v1.12.1
        imagePullPolicy: Always
        args:
        - --v=2
        - --leader-election-namespace=kube-system
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsUser: 25000
          readOnlyRootFilesystem: true
        resources:
          requests:
            memory: 128Mi
            cpu: 250m
          limits:
            memory: 128Mi
            cpu: 250m
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: custom-policy
spec:
  podSelector:
    matchLabels:
      app: cert-manager
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - ipBlock:
        cidr: 10.0.1.0/24
  egress:
  - to:
    - ipBlock:
        cidr: 10.0.1.0/24
    ports:
    - protocol: TCP
      port: 5978
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-cert-manager
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
  namespace: busybox-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: controller
        app.kubernetes.io/version: v1.12.1
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.12.1
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9402'
        container.apparmor.security.beta.kubernetes.io/cert-manager-controller: runtime/default
    spec:
      serviceAccountName: release-name-cert-manager
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        runAsUser: 25000
      containers:
      - name: cert-manager-controller
        image: quay.io/jetstack/cert-manager-controller:v1.12.1
        imagePullPolicy: Always
        args:
        - --v=2
        - --cluster-resource-namespace=$(POD_NAMESPACE)
        - --leader-election-namespace=kube-system
        - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.12.1
        - --max-concurrent-challenges=60
        ports:
        - containerPort: 9402
          name: http-metrics
          protocol: TCP
        - containerPort: 9403
          name: http-healthz
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsUser: 25000
          readOnlyRootFilesystem: true
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            memory: 128Mi
            cpu: 250m
          limits:
            memory: 128Mi
            cpu: 250m
        readinessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - ls
            - /
          initialDelaySeconds: 30
          periodSeconds: 10
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: custom-policy
spec:
  podSelector:
    matchLabels:
      app: webhook
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - ipBlock:
        cidr: 10.0.1.0/24
  egress:
  - to:
    - ipBlock:
        cidr: 10.0.1.0/24
    ports:
    - protocol: TCP
      port: 5978
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-cert-manager-webhook
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
  namespace: busybox-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: webhook
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: webhook
  template:
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/name: webhook
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: webhook
        app.kubernetes.io/version: v1.12.1
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.12.1
      annotations:
        container.apparmor.security.beta.kubernetes.io/cert-manager-webhook: runtime/default
    spec:
      serviceAccountName: release-name-cert-manager-webhook
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        runAsUser: 25000
      containers:
      - name: cert-manager-webhook
        image: quay.io/jetstack/cert-manager-webhook:v1.12.1
        imagePullPolicy: Always
        args:
        - --v=2
        - --secure-port=10250
        - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
        - --dynamic-serving-ca-secret-name=release-name-cert-manager-webhook-ca
        - --dynamic-serving-dns-names=release-name-cert-manager-webhook
        - --dynamic-serving-dns-names=release-name-cert-manager-webhook.$(POD_NAMESPACE)
        - --dynamic-serving-dns-names=release-name-cert-manager-webhook.$(POD_NAMESPACE).svc
        ports:
        - name: https
          protocol: TCP
          containerPort: 10250
        - name: healthcheck
          protocol: TCP
          containerPort: 6080
        livenessProbe:
          httpGet:
            path: /livez
            port: 6080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: 6080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsUser: 25000
          readOnlyRootFilesystem: true
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            memory: 128Mi
            cpu: 250m
          limits:
            memory: 128Mi
            cpu: 250m
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: release-name-cert-manager-webhook
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
  annotations:
    cert-manager.io/inject-ca-from-secret: default/release-name-cert-manager-webhook-ca
webhooks:
- name: webhook.cert-manager.io
  rules:
  - apiGroups:
    - cert-manager.io
    - acme.cert-manager.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - '*/*'
  admissionReviewVersions:
  - v1
  matchPolicy: Equivalent
  timeoutSeconds: 10
  failurePolicy: Fail
  sideEffects: None
  clientConfig:
    service:
      name: release-name-cert-manager-webhook
      namespace: cert-manager
      path: /mutate
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: release-name-cert-manager-webhook
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
  annotations:
    cert-manager.io/inject-ca-from-secret: default/release-name-cert-manager-webhook-ca
webhooks:
- name: webhook.cert-manager.io
  namespaceSelector:
    matchExpressions:
    - key: cert-manager.io/disable-validation
      operator: NotIn
      values:
      - 'true'
    - key: name
      operator: NotIn
      values:
      - default
  rules:
  - apiGroups:
    - cert-manager.io
    - acme.cert-manager.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - '*/*'
  admissionReviewVersions:
  - v1
  matchPolicy: Equivalent
  timeoutSeconds: 10
  failurePolicy: Fail
  sideEffects: None
  clientConfig:
    service:
      name: release-name-cert-manager-webhook
      namespace: cert-manager
      path: /validate
---
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: false
metadata:
  name: release-name-cert-manager-startupapicheck
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: '-5'
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: startupapicheck
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
  namespace: busybox-namespace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-cert-manager-startupapicheck:create-cert
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: startupapicheck
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: '-5'
  namespace: busybox-namespace
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-cert-manager-startupapicheck:create-cert
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: startupapicheck
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: '-5'
  namespace: busybox-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-cert-manager-startupapicheck:create-cert
subjects:
- kind: ServiceAccount
  name: release-name-cert-manager-startupapicheck
  namespace: cert-manager
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: custom-policy
spec:
  podSelector:
    matchLabels:
      app: startupapicheck
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - ipBlock:
        cidr: 10.0.1.0/24
  egress:
  - to:
    - ipBlock:
        cidr: 10.0.1.0/24
    ports:
    - protocol: TCP
      port: 5978
---
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-cert-manager-startupapicheck
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: startupapicheck
    app.kubernetes.io/version: v1.12.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: cert-manager-v1.12.1
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: '1'
  namespace: busybox-namespace
spec:
  backoffLimit: 4
  template:
    metadata:
      labels:
        app: startupapicheck
        app.kubernetes.io/name: startupapicheck
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: startupapicheck
        app.kubernetes.io/version: v1.12.1
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.12.1
      annotations:
        container.apparmor.security.beta.kubernetes.io/cert-manager-startupapicheck: runtime/default
    spec:
      restartPolicy: OnFailure
      serviceAccountName: release-name-cert-manager-startupapicheck
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        runAsUser: 25000
      containers:
      - name: cert-manager-startupapicheck
        image: quay.io/jetstack/cert-manager-ctl:v1.12.1
        imagePullPolicy: Always
        args:
        - check
        - api
        - --wait=1m
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsUser: 25000
          readOnlyRootFilesystem: true
        resources:
          requests:
            memory: 128Mi
            cpu: 250m
          limits:
            memory: 128Mi
            cpu: 250m
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: v1
kind: LimitRange
metadata:
  name: cpu-min-max-demo-lr
  namespace: busybox-namespace
spec:
  limits:
  - max:
      cpu: 800m
    min:
      cpu: 250m
    type: Container
---
apiVersion: v1
kind: LimitRange
metadata:
  name: cpu-min-max-demo-lr
  namespace: default
spec:
  limits:
  - max:
      cpu: 800m
    min:
      cpu: 250m
    type: Container
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: pods-high
  namespace: busybox-namespace
spec:
  hard:
    cpu: '1000'
    memory: 200Gi
    pods: '10'
  scopeSelector:
    matchExpressions:
    - operator: In
      scopeName: PriorityClass
      values:
      - high
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: pods-high
  namespace: default
spec:
  hard:
    cpu: '1000'
    memory: 200Gi
    pods: '10'
  scopeSelector:
    matchExpressions:
    - operator: In
      scopeName: PriorityClass
      values:
      - high
